{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["function analyseDropdown() {\r\n    // Append toggle attribute to all dropdown buttons\r\n    $('.trigger-dropdown').attr('toggled', 'no');\r\n    // Loop trough all triggers\r\n    $('.trigger-dropdown').each( function() {\r\n        // Save selectors in variables for easier use\r\n        var $this = $(this);\r\n        var $testTarget = $this.attr('toslidedown');\r\n        /*\r\n        Check if list is empty\r\n        If so, hide it\r\n         */\r\n        if( $this.parent().find($testTarget).length === 0 ) {\r\n            $this.parent().addClass(\"hide\");\r\n        }\r\n    });\r\n    // On trigger click fire function\r\n    $(\".trigger-dropdown\").on('click', function() {\r\n        // Save selectors in variables for easier use\r\n        var $trigger = $(this);\r\n        var $target = $(this).attr('toslidedown');\r\n        var toggleState = $(this).attr('toggled');\r\n        /*\r\n        If togglestate of trigger === 'no'\r\n        Open the dropdown\r\n        Change togglestate of trigger to 'yes'\r\n        Else\r\n        Close dropdown\r\n        Set togglestate of trigger to 'no'\r\n         */\r\n        if( toggleState === 'no' ) {\r\n            $trigger.parent().find($target).each( function() {\r\n                $(this).slideDown('fast', function() {\r\n                    $trigger.attr('toggled', 'yes');\r\n                });\r\n            });\r\n        } else {\r\n            $trigger.parent().find($target).each( function() {\r\n                $(this).slideUp('fast', function() {\r\n                    $trigger.attr('toggled', 'no');\r\n                });\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction hasUsers() {\r\n    // Loop trough all user-containers 1 by 1\r\n    $(\".user-container\").each( function() {\r\n        // Save selector in variables for easier use\r\n        var $this = $(this);\r\n        /*\r\n        If can't find container with class 'user'\r\n        then hide the user-container\r\n         */\r\n        if( $this.find('.user').length == 0 ) {\r\n            $this.hide();\r\n        }\r\n    });\r\n}\r\n\r\nfunction initSelect2() {\r\n    // Simple init of select2 plugin\r\n    $(\"#reviewer\").select2();\r\n    $(\".analyse-workprocess-select-field\").select2();\r\n}\r\n\r\n$(function() {\r\n    // Init anaylse dropdown\r\n    analyseDropdown();\r\n\r\n    // Check if has users\r\n    hasUsers();\r\n\r\n    // Init select2\r\n    initSelect2();\r\n\r\n    // Confirm user deletion\r\n    $(\".user-option.deny\").on('click', function(e) {\r\n        if(! confirm(\"Weet u het zeker dat u het gebruiker wilt verwijderen?\") ) {\r\n            e.preventDefault();\r\n        }\r\n    });\r\n})"],"sourceRoot":"/source/"}